---
AWSTemplateFormatVersion: '2010-09-09'
Description: DivvyCloud base deployment for enterprises. This template deploys the
  default network resources and security groups for DivvyCloud
Mappings:
  Ports:
    db:
      port: '3306'
    https:
      port: '443'
    instance:
      port: '8001'
    loadbalancer:
      port: '80'
    redis:
      port: '6379'
  VpcCidrs:
    subnet1:
      cidr: 172.31.0.0/20
    subnet2:
      cidr: 172.31.16.0/20
    vpc:
      cidr: 172.31.0.0/16
    world:
      cidr: 0.0.0.0/0
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Webserver Load Balancer Source CIDR Block
      Parameters:
      - ParameterCidr
    ParameterLabels:
      ParameterCidr:
        default: CIDR Block
Outputs:
  DBSubnetGroupDivvyRDS:
    Description: RDS Subnet for DivvyCloud
    Export:
      Name:
        Fn::Join:
        - ":"
        - - Ref: AWS::StackName
          - DBSubnetGroupDivvyRDS
    Value:
      Ref: DBSubnetGroupDivvyRDS
  SecurityGroupDivvyELB:
    Description: ELB Security Group for DivvyCloud
    Export:
      Name:
        Fn::Join:
        - ":"
        - - Ref: AWS::StackName
          - SecurityGroupDivvyELB
    Value:
      Ref: SecurityGroupDivvyELB
  SecurityGroupDivvyRDS:
    Description: RDS Security Group for DivvyCloud
    Export:
      Name:
        Fn::Join:
        - ":"
        - - Ref: AWS::StackName
          - SecurityGroupDivvyRDS
    Value:
      Ref: SecurityGroupDivvyRDS
  SecurityGroupDivvyRedis:
    Description: Redis Security Group for DivvyCloud
    Export:
      Name:
        Fn::Join:
        - ":"
        - - Ref: AWS::StackName
          - SecurityGroupDivvyRedis
    Value:
      Ref: SecurityGroupDivvyRedis
  SecurityGroupDivvyWorkers:
    Description: Workers Security Group for DivvyCloud
    Export:
      Name:
        Fn::Join:
        - ":"
        - - Ref: AWS::StackName
          - SecurityGroupDivvyWorkers
    Value:
      Ref: SecurityGroupDivvyWorkers
  SubnetDivvy1of2:
    Description: Subnet 1 for DivvyCloud
    Export:
      Name:
        Fn::Join:
        - ":"
        - - Ref: AWS::StackName
          - SubnetDivvy1of2
    Value:
      Ref: SubnetDivvy1of2
  SubnetDivvy2of2:
    Description: Subnet 2 for DivvyCloud
    Export:
      Name:
        Fn::Join:
        - ":"
        - - Ref: AWS::StackName
          - SubnetDivvy2of2
    Value:
      Ref: SubnetDivvy2of2
  SubnetGroupDivvyRedis:
    Description: Redis Subnet for DivvyCloud
    Export:
      Name:
        Fn::Join:
        - ":"
        - - Ref: AWS::StackName
          - SubnetGroupDivvyRedis
    Value:
      Ref: SubnetGroupDivvyRedis
  VPCDivvy:
    Description: VPC for DivvyCloud
    Export:
      Name:
        Fn::Join:
        - ":"
        - - Ref: AWS::StackName
          - VPCDivvy
    Value:
      Ref: VPCDivvy
Parameters:
  ParameterCidr:
    ConstraintDescription: Source CIDR block must be a valid notation.
    Default: 0.0.0.0/0
    Description: Source CIDR block of Web Server Load Balancer.
    Type: String
Resources:
  DBSubnetGroupDivvyRDS:
    DependsOn:
    - VPCDivvy
    - SubnetDivvy1of2
    - SubnetDivvy2of2
    Properties:
      DBSubnetGroupDescription: Created from the RDS Management Console
      SubnetIds:
      - Ref: SubnetDivvy1of2
      - Ref: SubnetDivvy2of2
    Type: AWS::RDS::DBSubnetGroup
  DHCPOptionsDivvy:
    Properties:
      DomainName: ec2.internal
      DomainNameServers:
      - AmazonProvidedDNS
    Type: AWS::EC2::DHCPOptions
  InternetGatewayDivvy:
    DependsOn: VPCDivvy
    Properties:
      Tags:
      - Key: Name
        Value: DivvyCloud-InternetGateway
    Type: AWS::EC2::InternetGateway
  NetworkAclDivvy:
    DependsOn: VPCDivvy
    Properties:
      VpcId:
        Ref: VPCDivvy
    Type: AWS::EC2::NetworkAcl
  NetworkAclEntryDivvy1of2:
    DependsOn: NetworkAclDivvy
    Properties:
      CidrBlock:
        Fn::FindInMap:
        - VpcCidrs
        - world
        - cidr
      Egress: 'true'
      NetworkAclId:
        Ref: NetworkAclDivvy
      Protocol: "-1"
      RuleAction: allow
      RuleNumber: '100'
    Type: AWS::EC2::NetworkAclEntry
  NetworkAclEntryDivvy2of2:
    DependsOn: NetworkAclDivvy
    Properties:
      CidrBlock:
        Fn::FindInMap:
        - VpcCidrs
        - world
        - cidr
      NetworkAclId:
        Ref: NetworkAclDivvy
      Protocol: "-1"
      RuleAction: allow
      RuleNumber: '100'
    Type: AWS::EC2::NetworkAclEntry
  RouteDivvyVPC2Internet:
    DependsOn:
    - InternetGatewayDivvy
    - RouteTableDivvy
    Properties:
      DestinationCidrBlock:
        Fn::FindInMap:
        - VpcCidrs
        - world
        - cidr
      GatewayId:
        Ref: InternetGatewayDivvy
      RouteTableId:
        Ref: RouteTableDivvy
    Type: AWS::EC2::Route
  RouteTableDivvy:
    DependsOn:
    - VPCDivvy
    - VPCGatewayAttachmentDivvy
    Properties:
      Tags:
      - Key: Name
        Value: DivvyCloud-RouteTable
      VpcId:
        Ref: VPCDivvy
    Type: AWS::EC2::RouteTable
  SecurityGroupDivvyELB:
    DependsOn:
    - VPCDivvy
    Properties:
      GroupDescription: Web rules for the load balancer
      SecurityGroupEgress:
      - CidrIp:
          Fn::FindInMap:
          - VpcCidrs
          - world
          - cidr
        IpProtocol: "-1"
      SecurityGroupIngress:
      - CidrIp:
          Ref: ParameterCidr
        FromPort:
          Fn::FindInMap:
          - Ports
          - loadbalancer
          - port
        IpProtocol: tcp
        ToPort:
          Fn::FindInMap:
          - Ports
          - loadbalancer
          - port
      - CidrIp:
          Ref: ParameterCidr
        FromPort:
          Fn::FindInMap:
          - Ports
          - https
          - port
        IpProtocol: tcp
        ToPort:
          Fn::FindInMap:
          - Ports
          - https
          - port
      VpcId:
        Ref: VPCDivvy
    Type: AWS::EC2::SecurityGroup
  SecurityGroupDivvyRedis:
    DependsOn: VPCDivvy
    Properties:
      GroupDescription: RedisAccess
      SecurityGroupEgress:
      - CidrIp:
          Fn::FindInMap:
          - VpcCidrs
          - world
          - cidr
        IpProtocol: "-1"
      SecurityGroupIngress:
      - CidrIp:
          Fn::FindInMap:
          - VpcCidrs
          - vpc
          - cidr
        FromPort:
          Fn::FindInMap:
          - Ports
          - redis
          - port
        IpProtocol: tcp
        ToPort:
          Fn::FindInMap:
          - Ports
          - redis
          - port
      VpcId:
        Ref: VPCDivvy
    Type: AWS::EC2::SecurityGroup
  SecurityGroupDivvyRDS:
    DependsOn:
    - VPCDivvy
    Properties:
      GroupDescription: Database Rules
      SecurityGroupEgress:
      - CidrIp:
          Fn::FindInMap:
          - VpcCidrs
          - world
          - cidr
        IpProtocol: "-1"
      SecurityGroupIngress:
      - CidrIp:
          Fn::FindInMap:
          - VpcCidrs
          - vpc
          - cidr
        FromPort:
          Fn::FindInMap:
          - Ports
          - db
          - port
        IpProtocol: tcp
        ToPort:
          Fn::FindInMap:
          - Ports
          - db
          - port
      VpcId:
        Ref: VPCDivvy
    Type: AWS::EC2::SecurityGroup
  SecurityGroupDivvyWorkers:
    DependsOn:
    - VPCDivvy
    Properties:
      GroupDescription: Worker/web rules
      SecurityGroupEgress:
      - CidrIp:
          Fn::FindInMap:
          - VpcCidrs
          - world
          - cidr
        IpProtocol: "-1"
      SecurityGroupIngress:
      - CidrIp:
          Fn::FindInMap:
          - VpcCidrs
          - vpc
          - cidr
        FromPort:
          Fn::FindInMap:
          - Ports
          - instance
          - port
        IpProtocol: tcp
        ToPort:
          Fn::FindInMap:
          - Ports
          - instance
          - port
      VpcId:
        Ref: VPCDivvy
    Type: AWS::EC2::SecurityGroup
  SubnetDivvy1of2:
    DependsOn: VPCDivvy
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '0'
        - Fn::GetAZs: ''
      CidrBlock:
        Fn::FindInMap:
        - VpcCidrs
        - subnet1
        - cidr
      Tags:
      - Key: Name
        Value: DivvyCloud-Subnet1
      VpcId:
        Ref: VPCDivvy
    Type: AWS::EC2::Subnet
  SubnetDivvy2of2:
    DependsOn: VPCDivvy
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '1'
        - Fn::GetAZs: ''
      CidrBlock:
        Fn::FindInMap:
        - VpcCidrs
        - subnet2
        - cidr
      Tags:
      - Key: Name
        Value: DivvyCloud-Subnet2
      VpcId:
        Ref: VPCDivvy
    Type: AWS::EC2::Subnet
  SubnetGroupDivvyRedis:
    DependsOn:
    - VPCDivvy
    - SubnetDivvy1of2
    Properties:
      Description: Redis subnet group
      SubnetIds:
      - Ref: SubnetDivvy1of2
    Type: AWS::ElastiCache::SubnetGroup
  SubnetNetworkAclAssociationDivvy1of2:
    DependsOn:
    - NetworkAclDivvy
    - SubnetDivvy1of2
    Properties:
      NetworkAclId:
        Ref: NetworkAclDivvy
      SubnetId:
        Ref: SubnetDivvy1of2
    Type: AWS::EC2::SubnetNetworkAclAssociation
  SubnetNetworkAclAssociationDivvy2of2:
    DependsOn:
    - NetworkAclDivvy
    - SubnetDivvy2of2
    Properties:
      NetworkAclId:
        Ref: NetworkAclDivvy
      SubnetId:
        Ref: SubnetDivvy2of2
    Type: AWS::EC2::SubnetNetworkAclAssociation
  SubnetRouteTableAssociationDivvy1of2:
    DependsOn:
    - SubnetDivvy1of2
    - RouteTableDivvy
    Properties:
      RouteTableId:
        Ref: RouteTableDivvy
      SubnetId:
        Ref: SubnetDivvy1of2
    Type: AWS::EC2::SubnetRouteTableAssociation
  SubnetRouteTableAssociationDivvy2of2:
    DependsOn:
    - SubnetDivvy2of2
    - RouteTableDivvy
    Properties:
      RouteTableId:
        Ref: RouteTableDivvy
      SubnetId:
        Ref: SubnetDivvy2of2
    Type: AWS::EC2::SubnetRouteTableAssociation
  VPCDivvy:
    Properties:
      CidrBlock:
        Fn::FindInMap:
        - VpcCidrs
        - vpc
        - cidr
      EnableDnsHostnames: 'false'
      EnableDnsSupport: 'true'
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: DivvyCloud-VPC
    Type: AWS::EC2::VPC
  VPCDHCPOptionsAssociationDivvy:
    DependsOn:
    - VPCDivvy
    - DHCPOptionsDivvy
    Properties:
      DhcpOptionsId:
        Ref: DHCPOptionsDivvy
      VpcId:
        Ref: VPCDivvy
    Type: AWS::EC2::VPCDHCPOptionsAssociation
  VPCGatewayAttachmentDivvy:
    DependsOn:
    - VPCDivvy
    - InternetGatewayDivvy
    Properties:
      InternetGatewayId:
        Ref: InternetGatewayDivvy
      VpcId:
        Ref: VPCDivvy
    Type: AWS::EC2::VPCGatewayAttachment
